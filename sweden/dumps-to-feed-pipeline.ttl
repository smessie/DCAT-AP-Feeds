@prefix js: <https://w3id.org/conn/js#>.
@prefix : <https://w3id.org/conn#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix tree: <https://w3id.org/tree#>.
@prefix as: <https://www.w3.org/ns/activitystreams#>.

<> owl:imports <../node_modules/@rdfc/js-runner/ontology.ttl>.
<> owl:imports <../node_modules/@rdfc/js-runner/channels/file.ttl>.
<> owl:imports <../node_modules/@rdfc/http-utils-processor-ts/processors.ttl>.
<> owl:imports <../node_modules/@rdfc/file-utils-processors-ts/processors.ttl>.
<> owl:imports <../node_modules/@rdfc/dumps-to-feed-processor-ts/processor.ttl>.
<> owl:imports <../node_modules/@rdfc/sds-storage-writer-ts/processor.ttl>.
<> owl:imports <../node_modules/@rdfc/sds-processors-ts/configs/bucketizer.ttl>.
<> owl:imports <../node_modules/@rdfc/sds-processors-ts/configs/sdsify.ttl>.

<dump/writer> a js:JsWriterChannel.
<dump/reader> a js:JsReaderChannel.
[ ] a js:JsChannel;
    :reader <dump/reader>;
    :writer <dump/writer>.

<feed/writer> a js:JsWriterChannel.
<feed/reader> a js:JsReaderChannel.
[ ] a js:JsChannel;
    :reader <feed/reader>;
    :writer <feed/writer>.

<sds/writer> a js:JsWriterChannel.
<sds/reader> a js:JsReaderChannel.
[ ] a js:JsChannel;
    :reader <sds/reader>;
    :writer <sds/writer>.

<bucketized/writer> a js:JsWriterChannel.
<bucketized/reader> a js:JsReaderChannel.
[ ] a js:JsChannel;
    :reader <bucketized/reader>;
    :writer <bucketized/writer>.

<metadata/writer> a js:JsWriterChannel.
<metadata/reader> a js:JsReaderChannel.
[ ] a js:JsChannel;
    :reader <metadata/reader>;
    :writer <metadata/writer>.

<metadata/bucketized/writer> a js:JsWriterChannel.
<metadata/bucketized/reader> a js:JsReaderChannel.
[ ] a js:JsChannel;
    :reader <metadata/bucketized/reader>;
    :writer <metadata/bucketized/writer>.

# File reader channel for metadata input on js:Ingest
[ ] a js:GlobRead;
    js:glob <./metadata.ttl>;
    js:output <metadata/writer>;
    js:closeOnEnd "true"^^xsd:boolean.

[ ] a js:HttpFetch;
    js:url "https://admin.dataportal.se/all.rdf";  # https://admin.dataportal.se/all.rdf
    js:writer <dump/writer>;
    js:HttpFetchOptions [
                  js:cron "0 * * * *" ;
                  js:closeOnEnd "false"^^xsd:boolean ;
                  js:timeOutMilliseconds 60000
              ].

# Processor to persist the SDS stream into a MongoDB instance
[ ] a js:Ingest;
    js:dataInput <bucketized/reader>;
    js:metadataInput <metadata/bucketized/reader>;
    js:database [
          js:url <mongodb://root:password@mongodb:27017/sweden?authSource=admin>;
          js:metadata "METADATA";
          js:data "DATA";
          js:index "INDEX";
    ].

# Processor to wrap the data as individual SDS records
[ ] a js:Sdsify;
    js:input <feed/reader>;
    js:output <sds/writer>;
    js:stream <https://w3id.org/sds#Stream>;
    js:typeFilter as:Create, as:Update, as:Delete;
    js:shape """
        @prefix sh: <http://www.w3.org/ns/shacl#> .
        @prefix as: <https://www.w3.org/ns/activitystreams#> .

        [ ] a sh:NodeShape ;
            sh:targetClass as:Create.
    """,
    """
        @prefix sh: <http://www.w3.org/ns/shacl#> .
        @prefix as: <https://www.w3.org/ns/activitystreams#> .

        [ ] a sh:NodeShape ;
            sh:targetClass as:Update.
    """,
    """
        @prefix sh: <http://www.w3.org/ns/shacl#> .
        @prefix as: <https://www.w3.org/ns/activitystreams#> .

        [ ] a sh:NodeShape ;
            sh:targetClass as:Delete.
    """.

# Processor to bucketize the data
[ ] a js:Bucketize;
    js:channels [
        js:dataInput <sds/reader>;
        js:dataOutput <bucketized/writer>;
        js:metadataInput <metadata/reader>;
        js:metadataOutput <metadata/bucketized/writer>;
    ];
    js:bucketizeStrategy ( [
                               a tree:TimebasedFragmentation;
                               tree:timestampPath <https://www.w3.org/ns/activitystreams#published>;
                               tree:maxSize 100;
                               tree:k 4;
                               tree:minBucketSpan 3600;
                           ]);
    js:savePath </opt/pipeline/feed-state/buckets_save.json>;
    js:outputStreamId <https://w3id.org/sds#Stream>.


[ ] a js:DumpsToFeed;
    js:output <feed/writer>;
    js:feedname "sweden";
    js:flush "false"^^xsd:boolean;
    js:dump <dump/reader>;
    js:dumpContentType "application/rdf+xml";
    js:focusNodesStrategy "extract";
    js:nodeShapeIri "https://semiceu.github.io/LDES-DCAT-AP-feeds/shape.ttl#ActivityShape";
    js:dbDir "/opt/pipeline/leveldb/".

